; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 4
; RUN: llc < %s -mtriple=arm64-eabi -aarch64-neon-syntax=apple | FileCheck %s

define i64 @test_vaddlv_s32(<2 x i32> %a1) nounwind readnone {
; CHECK-LABEL: test_vaddlv_s32:
; CHECK:       // %bb.0: // %entry
; CHECK-NEXT:    saddlp.1d v0, v0
; CHECK-NEXT:    fmov x0, d0
; CHECK-NEXT:    ret
entry:
  %vaddlv.i = tail call i64 @llvm.aarch64.neon.saddlv.i64.v2i32(<2 x i32> %a1) nounwind
  ret i64 %vaddlv.i
}

define i64 @test_vaddlv_u32(<2 x i32> %a1) nounwind readnone {
; CHECK-LABEL: test_vaddlv_u32:
; CHECK:       // %bb.0: // %entry
; CHECK-NEXT:    uaddlp.1d v0, v0
; CHECK-NEXT:    fmov x0, d0
; CHECK-NEXT:    ret
entry:
  %vaddlv.i = tail call i64 @llvm.aarch64.neon.uaddlv.i64.v2i32(<2 x i32> %a1) nounwind
  ret i64 %vaddlv.i
}

declare i64 @llvm.aarch64.neon.uaddlv.i64.v2i32(<2 x i32>) nounwind readnone

declare i64 @llvm.aarch64.neon.saddlv.i64.v2i32(<2 x i32>) nounwind readnone

