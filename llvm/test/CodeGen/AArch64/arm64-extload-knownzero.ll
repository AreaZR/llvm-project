; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 4
; RUN: llc < %s -mtriple=arm64-eabi | FileCheck %s
; rdar://12771555

define void @foo(ptr %ptr, i32 %a) nounwind {
; CHECK-LABEL: foo:
; CHECK:       // %bb.0: // %entry
; CHECK-NEXT:    cmp w1, #99
; CHECK-NEXT:    b.hi .LBB0_2
; CHECK-NEXT:  // %bb.1: // %bb1
; CHECK-NEXT:    ldrh w8, [x0]
; CHECK-NEXT:    cmp w8, #23
; CHECK-NEXT:    b.ls .LBB0_3
; CHECK-NEXT:    b .LBB0_4
; CHECK-NEXT:  .LBB0_2:
; CHECK-NEXT:    mov w8, wzr
; CHECK-NEXT:    cmp w8, #23
; CHECK-NEXT:    b.hi .LBB0_4
; CHECK-NEXT:  .LBB0_3: // %bb3
; CHECK-NEXT:    str x30, [sp, #-16]! // 8-byte Folded Spill
; CHECK-NEXT:    bl bar
; CHECK-NEXT:    ldr x30, [sp], #16 // 8-byte Folded Reload
; CHECK-NEXT:  .LBB0_4: // %exit
; CHECK-NEXT:    ret
entry:
  %tmp1 = icmp ult i32 %a, 100
  br i1 %tmp1, label %bb1, label %bb2
bb1:
  %tmp2 = load i16, ptr %ptr, align 2
  br label %bb2
bb2:
  %tmp3 = phi i16 [ 0, %entry ], [ %tmp2, %bb1 ]
  %cmp = icmp ult i16 %tmp3, 24
  br i1 %cmp, label %bb3, label %exit
bb3:
  call void @bar() nounwind
  br label %exit
exit:
  ret void
}

declare void @bar ()
